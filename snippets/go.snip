snippet		httph
	func ${1:fname}(w http.ResponseWriter, r *http.Request) {
		${2}
	}

snippet		ife
	if err != nil {
		${1:TARGET}
	}

snippet		fm
	func main () {
		${1:TARGET}
	}

snippet		gb
	package main

	func main() {
		${1:TARGET}
	}

snippet		func
abbr			func ...() { ... }
options		head
	func ${1:fname}(${2}) ${3:int }{
		${0:TARGET:return }
	}

snippet		import
options		head
	import (
		"${1:fmt}"
	)
	${0:TARGET}

snippet		package
options		head
	package ${1:main}
	${0:TARGET}

snippet		fpf
options		word
	fmt.Printf(${1})

snippet		fpl
options		word
	fmt.Println(${0:TARGET})

snippet		lpf
options		word
	log.Printf(${1})

snippet		lpl
options		word
  log.Println(${1})

snippet		lfl
options		word
  log.Fatalln(err)

snippet		struct
options		head
	type ${1} struct {
		${0:TARGET}
	}

snippet		interface
options		head
	type ${1} interface {
		${0:TARGET}
	}

snippet		for
options		head
	for ${1} {
		${0:TARGET}
	}

snippet		range
abbr			for range
options		head
	for ${1:v} := range ${2:#:iterator} {
		${0:TARGET}
	}

snippet		if
options		head
	if ${1:err != nil} {
		${0:TARGET}
	}

snippet		switch
abbr			switch {}
options		head
	switch ${1:#:v} {
	case ${2:#:condition}:
		${0:TARGET}
	}

snippet		select
abbr			select {}
options		head
	select {
		case ${1:#:condition}:
			${0:TARGET}
	}

snippet		case
options		head
	case ${1:#:condition}:
		${2:TARGET}

snippet		us
options		head
	a := []int{1, 5, 7, 3, 2, 4, 8}

snippet		es
options		head
  a := []int{${1}}

snippet		nl
options		head
	for i := 0; i < len(${1}); i++ {
		for j := 0; j < len(${2}); j++ {
			fmt.Println()
		}
	}
